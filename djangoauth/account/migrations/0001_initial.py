# Generated by Django 4.2.3 on 2023-08-20 19:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=100, null=True)),
                (
                    "roles",
                    models.CharField(
                        blank=True,
                        choices=[("intern", "Intern"), ("recruiter", "Recruiter")],
                        max_length=12,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("otp", models.IntegerField(blank=True, null=True)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user is verified.",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InternProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("phone_number", models.IntegerField(default=None, null=True)),
                (
                    "current_location",
                    models.CharField(
                        choices=[
                            ("Abia", "Abia (Umuahia)"),
                            ("Adamawa", "Adamawa (Yola)"),
                            ("Akwa Ibom", "Akwa Ibom (Uyo)"),
                            ("Anambra", "Anambra (Awka)"),
                            ("Bauchi", "Bauchi (Bauchi)"),
                            ("Bayelsa", "Bayelsa (Yenagoa)"),
                            ("Benue", "Benue (Makurdi)"),
                            ("Borno", "Borno (Maiduguri)"),
                            ("Cross River", "Cross River (Calabar)"),
                            ("Delta", "Delta (Asaba)"),
                            ("Ebonyi", "Ebonyi (Abakaliki)"),
                            ("Edo", "Edo (Benin City)"),
                            ("Ekiti", "Ekiti (Ado Ekiti)"),
                            ("Enugu", "Enugu (Enugu)"),
                            ("Gombe", "Gombe (Gombe)"),
                            ("Imo", "Imo (Owerri)"),
                            ("Jigawa", "Jigawa (Dutse)"),
                            ("Kaduna", "Kaduna (Kaduna)"),
                            ("Kano", "Kano (Kano)"),
                            ("Katsina", "Katsina (Katsina)"),
                            ("Kebbi", "Kebbi (Birnin Kebbi)"),
                            ("Kogi", "Kogi (Lokoja)"),
                            ("Kwara", "Kwara (Ilorin)"),
                            ("Lagos", "Lagos (Ikeja)"),
                            ("Nasarawa", "Nasarawa (Lafia)"),
                            ("Niger", "Niger (Minna)"),
                            ("Ogun", "Ogun (Abeokuta)"),
                            ("Ondo", "Ondo (Akure)"),
                            ("Osun", "Osun (Osogbo)"),
                            ("Oyo", "Oyo (Ibadan)"),
                            ("Plateau", "Plateau (Jos)"),
                            ("Rivers", "Rivers (Port Harcourt)"),
                            ("Sokoto", "Sokoto (Sokoto)"),
                            ("Taraba", "Taraba (Jalingo)"),
                            ("Yobe", "Yobe (Damaturu)"),
                            ("Zamfara", "Zamfara (Gusau)"),
                        ],
                        default="Abia",
                        max_length=100,
                    ),
                ),
                (
                    "intern_category",
                    models.CharField(
                        choices=[
                            ("About to graduate", "About to graduate"),
                            ("Just graduated", "Just graduated"),
                            ("Looking to change fields", "Looking to change fields"),
                        ],
                        default="About to graduate",
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruiterProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "company_size",
                    models.CharField(
                        choices=[
                            ("1-50", "1-50"),
                            ("51-100", "51-100"),
                            ("100-1000", "100-1000"),
                            ("1000-5000", "1000-5000"),
                            ("<5000", "<5000"),
                        ],
                        default="Company Size",
                        max_length=100,
                    ),
                ),
                (
                    "established_year",
                    models.CharField(
                        choices=[
                            ("2023", "2023"),
                            ("2022", "2022"),
                            ("2021", "2021"),
                            ("2020", "2020"),
                            ("2019", "2019"),
                            ("2018", "2018"),
                        ],
                        default="Established Year",
                        max_length=100,
                    ),
                ),
                (
                    "company_website",
                    models.CharField(default="Enter Website Name", max_length=100),
                ),
                (
                    "company_url",
                    models.CharField(default="Enter Websiter URL", max_length=100),
                ),
                (
                    "company_mission",
                    models.TextField(
                        default=None,
                        validators=[django.core.validators.MaxLengthValidator(500)],
                    ),
                ),
                (
                    "about_us",
                    models.CharField(
                        choices=[
                            ("Word of mouth", "Word of mouth"),
                            ("Facebook", "Facebook"),
                            ("Linkedin", "Linkedin"),
                            ("Reddit", "Reddit"),
                            ("AD", "AD"),
                        ],
                        default="Select",
                        max_length=100,
                    ),
                ),
            ],
        ),
    ]
